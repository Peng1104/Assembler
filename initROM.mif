-- -------------------------------------
--               MIF File
-- -------------------------------------

WIDTH=16;
DEPTH=256;

ADDRESS_RADIX=DEC;
DATA_RADIX=BIN;

CONTENT BEGIN

-- -------------------------------------
--               Constants
-- -------------------------------------

-- LED=256
-- LED8=257
-- LED9=258
-- SECOND_UNIT_DISPLAY=288
-- SECOND_TEN_DISPLAY=289
-- MINUTE_UNIT_DISPLAY=290
-- MINUTE_TEN_DISPLAY=291
-- HOUR_UNIT_DISPLAY=292
-- HOUR_TEN_DISPLAY=293
-- INCREMENT_KEY=352
-- SETUP_KEY=353
-- RESET_KEY=354
-- KEY3=355
-- FPGA_RESET=356
-- CLEAR_KEYS=511
-- LIMIT_SWITH=320
-- SET_SWITH=321
-- INVERT_SWITH=322
-- READ_TIME=384
-- SET_TIMER_TO_SECONDS=385
-- SET_TIMER_TO_FAST=386
-- CLEAR_TIME=447
-- SECONDS=10
-- MINUTES=12
-- HOURS=13

-- -------------------------------------
--                 Labels
-- -------------------------------------

-- START_SETUP=35
-- MAIN=1
-- RESET=14
-- SET_MAX=28
-- SETUP=42
-- SETUP_NEXT=48
-- FINISH_SET_UP=54
-- UPDATE_COUTER=60
-- INCREMENT_SECONDS=66
-- INCREMENT_MINUTES=72
-- INCREMENT_HOURS=80
-- RESET_TIMER=88
-- CHECK_FOR_OVERFLOW=91
-- UNDERFLOW=92
-- DECREMENT_SECONDS=101
-- DECREMENT_MINUTES=107
-- DECREMENT_HOURS=115
-- SETUP_DISPLAYS=123
-- DISPLAYS=136
-- SPLIT_SECONDS=140
-- END_SECONDS_SPLIT=146
-- SPLIT_MINUTES=149
-- END_MINUTES_SPLIT=155
-- SPLIT_HOURS=158
-- END_HOURS_SPLIT=164

-- -------------------------------------
--            Memory Content
-- -------------------------------------

	-- Reseta os displays
	0   : 0011100000001110; -- JMP @RESET
	-- Verifica se o botão de incremento foi pressionado e vai para a sub-rotina de incremento
	1   : 0000100110000000; -- LOAD @READ_TIME
	2   : 1011100000000001; -- ANDI $1
	3   : 0010100000000001; -- CEQI $1
	4   : 0011000000111100; -- JEQ @UPDATE_COUTER
	-- Verifica se o botão de reset foi pressionado e vai para a sub-rotina de reset
	5   : 0000100101100010; -- LOAD @RESET_KEY
	6   : 1011100000000001; -- ANDI $1
	7   : 0010100000000001; -- CEQI $1
	8   : 0011000000001110; -- JEQ @RESET
	-- Verifica se o botão de setup foi pressionado e vai para a sub-rotina de setup
	9   : 0000100101100001; -- LOAD @SETUP_KEY
	10  : 1011100000000001; -- ANDI $1
	11  : 0010100000000001; -- CEQI $1
	12  : 0011000000100011; -- JEQ @START_SETUP
	-- Volta para o loop principal, se não pressionou nenhum botão
	13  : 0011100000000001; -- JMP @MAIN
	-- Reseta os botões pressionados
	14  : 0001100111111111; -- STORE @CLEAR_KEYS
	-- Reseta o LED de overflow
	15  : 0001000000000000; -- LOADI $0
	16  : 0001100100000000; -- STORE @LED
	17  : 0001100100000001; -- STORE @LED8
	18  : 0001100100000010; -- STORE @LED9
	-- Verifica se eSTORE invertido e se sim, reseta o contador para o valor máximo
	19  : 0000100101000010; -- LOAD @INVERT_SWITH
	20  : 1011100000000001; -- ANDI $1
	21  : 0010100000000001; -- CEQI $1
	22  : 0011000000011100; -- JEQ @SET_MAX
	-- Zera o contador
	23  : 0001000000000000; -- LOADI $0
	24  : 0001100000001010; -- STORE @SECONDS
	25  : 0001100000001100; -- STORE @MINUTES
	26  : 0001100000001101; -- STORE @HOURS
	-- Reseta o display
	27  : 0011100010001000; -- JMP @DISPLAYS
	-- Configura o contador para o valor máximo
	28  : 0001000000111011; -- LOADI $59
	29  : 0001100000001010; -- STORE @SECONDS
	30  : 0001000000111011; -- LOADI $59
	31  : 0001100000001100; -- STORE @MINUTES
	32  : 0001000000010111; -- LOADI $23
	33  : 0001100000001101; -- STORE @HOURS
	34  : 0011100010001000; -- JMP @DISPLAYS
	35  : 0001100111111111; -- STORE @CLEAR_KEYS
	-- Liga o LED de setup da unidade
	36  : 0001000000000001; -- LOADI $1
	37  : 0001100100000000; -- STORE @LED
	38  : 0001000000000000; -- LOADI $0
	39  : 0001100100000001; -- STORE @LED8
	40  : 0001100100000010; -- STORE @LED9
	41  : 0011100000101010; -- JMP @SETUP
	-- Verifica se o botão de setup foi pressionado
	42  : 0000100101100001; -- LOAD @SETUP_KEY
	43  : 1011100000000001; -- ANDI $1
	44  : 0010100000000001; -- CEQI $1
	45  : 0011000000110000; -- JEQ @SETUP_NEXT
	46  : 0100000001111011; -- JSR @SETUP_DISPLAYS
	-- Fica em loop de setup
	47  : 0011100000101010; -- JMP @SETUP
	-- Limpa os botões pressionados
	48  : 0001100111111111; -- STORE @CLEAR_KEYS
	-- Verifica se o novo limite é maior que 15
	49  : 0000100101000000; -- LOAD @LIMIT_SWITH
	50  : 1011100011110000; -- ANDI $240 # (0b11110000)
	51  : 0010100000000000; -- CEQI $0
	52  : 0011000000110110; -- JEQ @FINISH_SET_UP
	53  : 0011100000101010; -- JMP @SETUP
	-- Desliga todos os LEDs para indicar que o setup foi finalizado
	54  : 0001000000000000; -- LOADI $0
	55  : 0001100100000000; -- STORE @LED
	56  : 0001100100000001; -- STORE @LED8
	57  : 0001100100000010; -- STORE @LED9
	-- Reseta a contagem
	58  : 0011100000001110; -- JMP @RESET
	-- Desvia para atualizar os displays
	59  : 0011100010001000; -- JMP @DISPLAYS
	60  : 0001100110111111; -- STORE @CLEAR_TIME
	61  : 0000100101000010; -- LOAD @INVERT_SWITH
	62  : 1011100000000001; -- ANDI $1
	63  : 0010100000000001; -- CEQI $1
	64  : 0011000001100101; -- JEQ @DECREMENT_SECONDS
	65  : 0011100001000010; -- JMP @INCREMENT_SECONDS
	-- Incrementa a unidade
	66  : 0000100000001010; -- LOAD @SECONDS
	67  : 1001000000000001; -- ADDI $1
	-- Se for maior que 9, incrementa a dezena
	68  : 0010100000111100; -- CEQI $60
	69  : 0011000001001000; -- JEQ @INCREMENT_MINUTES
	70  : 0001100000001010; -- STORE @SECONDS
	71  : 0011100001011011; -- JMP @CHECK_FOR_OVERFLOW
	-- Reseta a unidade
	72  : 0001000000000000; -- LOADI $0
	73  : 0001100000001010; -- STORE @SECONDS
	-- Incrementa a dezena
	74  : 0000100000001100; -- LOAD @MINUTES
	75  : 1001000000000001; -- ADDI $1
	-- Se a dezena for maior que 9, incrementa a centena
	76  : 0010100000111100; -- CEQI $60
	77  : 0011000001010000; -- JEQ @INCREMENT_HOURS
	78  : 0001100000001100; -- STORE @MINUTES
	79  : 0011100001011011; -- JMP @CHECK_FOR_OVERFLOW
	-- Reseta a dezena
	80  : 0001000000000000; -- LOADI $0
	81  : 0001100000001100; -- STORE @MINUTES
	-- Incrementa a centena
	82  : 0000100000001101; -- LOAD @HOURS
	83  : 1001000000000001; -- ADDI $1
	-- Se a centena for maior que 9, incrementa o milhar
	84  : 0010100000011000; -- CEQI $24
	85  : 0011000001011000; -- JEQ @RESET_TIMER
	86  : 0001100000001101; -- STORE @HOURS
	87  : 0011100001011011; -- JMP @CHECK_FOR_OVERFLOW
	-- Reseta a centena
	88  : 0001000000000000; -- LOADI $0
	89  : 0001100000001101; -- STORE @HOURS
	90  : 0011100001011011; -- JMP @CHECK_FOR_OVERFLOW
	-- Se não atingiu nenhum limite, retorna para o loop principal
	91  : 0011100010001000; -- JMP @DISPLAYS
	-- Escreve valor minimo
	92  : 0001000000000000; -- LOADI $0
	93  : 0001100000001010; -- STORE @SECONDS
	94  : 0001100000001100; -- STORE @MINUTES
	95  : 0001100000001101; -- STORE @HOURS
	-- Liga o LED de overflow
	96  : 0001000011111111; -- LOADI $255
	97  : 0001100100000000; -- STORE @LED
	98  : 0001100100000001; -- STORE @LED8
	99  : 0001100100000010; -- STORE @LED9
	-- Retrorna para a sub-rotina de decremento da unidade
	100 : 0011100010001000; -- JMP @DISPLAYS
	-- Verifica se a unidade é zero e se for, decrementa a próxima casa
	101 : 0000100000001010; -- LOAD @SECONDS
	102 : 0010100000000000; -- CEQI $0
	103 : 0011000001101011; -- JEQ @DECREMENT_MINUTES
	-- Decrementa a unidade
	104 : 1010100000000001; -- SUBI $1
	105 : 0001100000001010; -- STORE @SECONDS
	106 : 0011100010001000; -- JMP @DISPLAYS
	-- Reseta a unidade para o valor máximo
	107 : 0001000000001001; -- LOADI $9
	108 : 0001100000001010; -- STORE @SECONDS
	-- Verifica se a dezena é zero e se for, decrementa a próxima casa
	109 : 0000100000001100; -- LOAD @MINUTES
	110 : 0010100000000000; -- CEQI $0
	111 : 0011000001110011; -- JEQ @DECREMENT_HOURS
	-- Decrementa a dezena
	112 : 1010100000000001; -- SUBI $1
	113 : 0001100000001100; -- STORE @MINUTES
	114 : 0011100010001000; -- JMP @DISPLAYS
	-- Reseta a dezena para o valor máximo
	115 : 0001000000001001; -- LOADI $9
	116 : 0001100000001100; -- STORE @MINUTES
	-- Verifica se a centena é zero e se for, decrementa a próxima casa
	117 : 0000100000001101; -- LOAD @HOURS
	118 : 0010100000000000; -- CEQI $0
	119 : 0011000001011100; -- JEQ @UNDERFLOW
	-- Decrementa a centena
	120 : 1010100000000001; -- SUBI $1
	121 : 0001100000001101; -- STORE @HOURS
	122 : 0011100010001000; -- JMP @DISPLAYS
	-- Escreve valor maximo nos displays
	123 : 0001000000001001; -- LOADI $9
	124 : 0001100100100000; -- STORE @SECOND_UNIT_DISPLAY
	125 : 0001000000000101; -- LOADI $5
	126 : 0001100100100001; -- STORE @SECOND_TEN_DISPLAY
	127 : 0001000000001001; -- LOADI $9
	128 : 0001100100100010; -- STORE @MINUTE_UNIT_DISPLAY
	129 : 0001000000000101; -- LOADI $5
	130 : 0001100100100011; -- STORE @MINUTE_TEN_DISPLAY
	131 : 0001000000000011; -- LOADI $3
	132 : 0001100100100100; -- STORE @HOUR_UNIT_DISPLAY
	133 : 0001000000000010; -- LOADI $2
	134 : 0001100100100101; -- STORE @HOUR_TEN_DISPLAY
	135 : 0100100000000000; -- RET
	-- Escreve os valores nos displays
	136 : 0100000010001100; -- JSR @SPLIT_SECONDS
	137 : 0100000010010101; -- JSR @SPLIT_MINUTES
	138 : 0100000010011110; -- JSR @SPLIT_HOURS
	-- Volta para o loop principal
	139 : 0011100000000001; -- JMP @MAIN
	140 : 0000100000001010; -- LOAD R0, SECONDS
	141 : 0110000000001010; -- CLTI R0, 10
	142 : 0110100010010010; -- JLT @END_SECONDS_SPLIT
	143 : 1001001000000001; -- ADDI R1, 1
	144 : 1010100000001010; -- SUBI R0, 10
	145 : 0011100010001100; -- JMP @SPLIT_SECONDS
	146 : 0001100100100000; -- STORE R0, SECOND_UNIT_DISPLAY
	147 : 0001101100100001; -- STORE R1, SECOND_TEN_DISPLAY
	148 : 0100100000000000; -- RET
	149 : 0000100000001100; -- LOAD R0, MINUTES
	150 : 0110000000001010; -- CLTI R0, 10
	151 : 0110100010011011; -- JLT @END_MINUTES_SPLIT
	152 : 1001001000000001; -- ADDI R1, 1
	153 : 1010100000001010; -- SUBI R0, 10
	154 : 0011100010010101; -- JMP @SPLIT_MINUTES
	155 : 0001100100100010; -- STORE R0, MINUTE_UNIT_DISPLAY
	156 : 0001101100100011; -- STORE R1, MINUTE_TEN_DISPLAY
	157 : 0100100000000000; -- RET
	158 : 0000100000001101; -- LOAD R0, HOURS
	159 : 0110000000001010; -- CLTI R0, 10
	160 : 0110100010100100; -- JLT @END_HOURS_SPLIT
	161 : 1001001000000001; -- ADDI R1, 1
	162 : 1010100000001010; -- SUBI R0, 10
	163 : 0011100010011110; -- JMP @SPLIT_HOURS
	164 : 0001100100100100; -- STORE R0, HOUR_UNIT_DISPLAY
	165 : 0001101100100101; -- STORE R1, HOUR_TEN_DISPLAY
	166 : 0100100000000000; -- RET
END;
